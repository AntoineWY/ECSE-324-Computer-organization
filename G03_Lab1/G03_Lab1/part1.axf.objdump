
P:/G03_Lab1/part1.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
			.text
			.global _start

_start:
			LDR R4, =RESULT    //r4 points to the result location
   0:	e59f4054 	ldr	r4, [pc, #84]	; 5c <NUMBERS+0x1c>
			LDR R2, [R4,#4]    //R2 holds the number of elements in the list
   4:	e5942004 	ldr	r2, [r4, #4]
			ADD R3, R4, #8     //R3 POINTS TO THE FIRST NUMBER
   8:	e2843008 	add	r3, r4, #8
            LDR R0, [R3]       //R0 HOLDS THE FIRST NUMBER IN THE LIST
   c:	e5930000 	ldr	r0, [r3]

00000010 <LOOP>:



LOOP:       SUBS R2, R2, #1    // DECREMENT THE LOOP COUNTER
  10:	e2522001 	subs	r2, r2, #1
       		BEQ DONE	   // END LOOP IF COUNTER HAS REACHED 0
  14:	0a000005 	beq	30 <DONE>
			ADD R3, R3, #4     //R3 POINTS TO THE NEXT NUMBER IN THE LIST
  18:	e2833004 	add	r3, r3, #4
			LDR R1, [R3]       // R1 HOLDS THE NEXT NUMBER IN THE LIST
  1c:	e5931000 	ldr	r1, [r3]
            CMP R0, R1         // CHECK IF IT IS GREATER THAN THE MAXIMUM
  20:	e1500001 	cmp	r0, r1
			BGE LOOP           // IF NO, BRANCH BACK TO THE LOOP
  24:	aafffff9 	bge	10 <LOOP>
            MOV R0, R1         // IF YES, UPDATE THE CURRENT MAX
  28:	e1a00001 	mov	r0, r1
			B LOOP             // BRANCH BACK TO THE LOOP
  2c:	eafffff7 	b	10 <LOOP>

00000030 <DONE>:

DONE: 		STR R0, [R4]
  30:	e5840000 	str	r0, [r4]

00000034 <END>:

        
END:        B END              // INFINITE LOOP!
  34:	eafffffe 	b	34 <END>

00000038 <RESULT>:
  38:	00000000 	.word	0x00000000

0000003c <N>:
  3c:	00000007 	.word	0x00000007

00000040 <NUMBERS>:
  40:	00000200 	.word	0x00000200
  44:	00000049 	.word	0x00000049
  48:	00000054 	.word	0x00000054
  4c:	00000058 	.word	0x00000058
  50:	00000010 	.word	0x00000010
  54:	0000000c 	.word	0x0000000c
  58:	0000008f 	.word	0x0000008f
  5c:	00000038 	.word	0x00000038
